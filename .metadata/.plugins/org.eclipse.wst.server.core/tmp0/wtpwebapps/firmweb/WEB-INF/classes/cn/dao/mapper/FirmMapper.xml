<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dao.FirmMapper">
  <resultMap id="BaseResultMap" type="cn.entity.Firm">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="firmid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="firm" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="audit" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isdel" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, firmid, firm, name, phone, address, email, audit, isdel, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from firm
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="getAllFirm" resultType="Firm">
    select * from firm
    <where>
      <if test="audit!=null and audit!=-1">
        and audit=#{audit}
      </if>
    </where>
  </select>

  <select id="getLoginFirm" resultType="Firm">
    select * from firm where firmid=#{firmid} AND audit=1
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from firm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.entity.Firm">
    insert into firm (id, firmid, firm, 
      name, phone, address, 
      email, audit, isdel, 
      password)
    values (#{id,jdbcType=INTEGER}, #{firmid,jdbcType=INTEGER}, #{firm,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{audit,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.entity.Firm">
    insert into firm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="firmid != null">
        firmid,
      </if>
      <if test="firm != null">
        firm,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="audit != null">
        audit,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firmid != null">
        #{firmid,jdbcType=INTEGER},
      </if>
      <if test="firm != null">
        #{firm,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="audit != null">
        #{audit,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.entity.Firm">
    update firm
    <set>
      <if test="firmid != null">
        firmid = #{firmid,jdbcType=INTEGER},
      </if>
      <if test="firm != null">
        firm = #{firm,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="audit != null">
        audit = #{audit,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.entity.Firm">
    update firm
    set firmid = #{firmid,jdbcType=INTEGER},
      firm = #{firm,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      audit = #{audit,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <update id="shenhe">
    update firm
    set audit=1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>